intellij {
    pluginName 'ChroMATERIAL'
    updateSinceUntilBuild true
}

group 'com.facebook.rucinskic.chromaterial' //'io.github.ciscorucinski.chromaterial'

patchPluginXml {

    pluginId 'com.facebook.rucinskic.chromaterial'
    version '2.0.1' // Plugin version
    sinceBuild '131'

    pluginDescription """
        ChroMATERIAL is a color scheme that expresses the chromatic nature of Material Design within IntelliJ and Android
        Studio. In particular, ChroMATERIAL focuses on syntax highlighting of code within the IDE's code editor. It's
        uniqueness lies in the idea of "enhance influence, not banality". <br><br>
         - Color Schemes: Default (dark), Darcula-compatible, Darker<br><br>
         - Supported Languages: Java, Kotlin, Groovy, XML, JSON, HTML, Regex, YAML<br>
         - Supported Features: Android, Android Manifest, Android Resources, Android Native (C / C++), Gradle, Logcat, Proguard Files, Property Files, Version Control, Debugger, Diff, XSLT, XPATH, Ignore Files*, Markdown* <br><br>
        * - via Plugin<br>
  """

    changeNotes """
        v2.0.1 :: <br><br>
        
        - Updated Languages: Groovy<br><br>
        
        - Notable changes: <br><br>
        
         * Fixed regression with Gradle DSL not displayed as green. (Closes #31)<br>
         * Fixed regression with Groovy Unknown Symbol not having a gray boxed effect. (Closes #32)<br><br>
        
        v2.0 :: <br><br>
        
        - Added Themes: Darker, Darcula-compatible<br>
        - Added Languages: Kotlin, Markdown<br><br>
        
        - Other Notable changes: <br><br>
        
         * Standardized colors across all languages.<br>
         * Added Breadcrumb color support to the editor.<br>
         * Enhanced Injected language color support.<br>
         * Added Read-only color support.<br>
         * Modified HTML Tree Tag level colors.<br>
         * Updated all warnings and errors to use italics.<br>
         * Unused identifiers are enhanced to prevent further issues.<br>
         * Enhanced Java instance field colors.<br>
         * Android Logcat's Assert are now purple.<br>
         * Tear line (plus collapse / expand buttons) are now green.<br>
         * Fixed regression with not highlighting all instances of the current identifier under the carat.<br><br>
        
        v1.1.1 :: <br><br>
        
        - v1.1 did not work when deployed. This is a quick-fix. <br><br>
        
        v1.1 :: <br><br>
        
        - Added Languages: Android Native (C / C++)<br>
        - Added Support: Debugger, ProGuard files, Ignore files <br><br>
        
        - Other Notable changes: <br><br>
        
         * Simplified the color scheme.<br>
         * Folded text is a different color.<br>
         * Numbers and Strings are the same color.<br>
         * Annotation colors are similar in style to comments. <br><br>
        
        v1.0 :: Initial Release: <br><br>
        
        - Added Color Scheme: Default (dark)<br>
        - Added Languages: Java, Groovy, XML, JSON, HTML<br>
        - Added Support: Android, Android Manifest, Android Resources, Gradle files, LogCat, Property files, and diffs <br>
  """

}

sourceSets {
    main {
        java.srcDir 'src/java'
        resources.srcDirs 'resources'
    }
}


def GROUP_CHROMATERIAL = 'ChroMATERIAL'

def sourceDir = 'src/colors'
def intelliJColorSchemeDir = "C:\\Users\\Christopher\\.Idea${intellij.type}${intellij.version}\\config\\colors"

task syncFiles(type: Copy) {

    group GROUP_CHROMATERIAL
    description "Syncronizes the original color scheme files from IntelliJ IDEA into the project and changes the extension to be xml"

    into sourceDir
    from intelliJColorSchemeDir, {
        rename 'ChroMATERIAL IntelliJ IDEA.icls', 'ChroMATERIAL.xml'
        rename '(.*)\\.icls$', '$1.xml'
    }

    doLast {
        println("Syncing and renaming files...\n\tfrom\t'$intelliJColorSchemeDir' \n\tinto\t'$sourceDir'")
    }

}

task renameFiles {

    group GROUP_CHROMATERIAL
    description "Changes the '.icls' file extension of any file in the source directory to '.xml'."

    doLast {
        ant.move(todir: sourceDir) {
            ant.fileset(dir: sourceDir)
            ant.globmapper(from: "*.icls", to: "*.xml")
        }
    }
}

build.dependsOn renameFiles
clean.dependsOn renameFiles
buildPlugin.dependsOn renameFiles